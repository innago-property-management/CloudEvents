[assembly: System.Reflection.AssemblyMetadata("RepositoryUrl", "https://github.com/innago-property-management/CloudEvents")]
[assembly: System.Runtime.CompilerServices.InternalsVisibleTo("DynamicProxyGenAssembly2")]
[assembly: System.Runtime.CompilerServices.InternalsVisibleTo("UnitTests")]
namespace Innago.Platform.Messaging.EntityEvents
{
    public static class EntityEventInfoExtensions
    {
        public static CloudNative.CloudEvents.CloudEvent ToCloudEvent<T>(this Innago.Platform.Messaging.EntityEvents.IEntityEventInfo<T> entityEventInfo) { }
    }
    public interface IEntityEventInfo<out T>
    {
        T Data { get; }
        string EntityName { get; }
        string Id { get; }
        string Subject { get; }
        string? TenantId { get; }
        System.DateTimeOffset Timestamp { get; }
        System.Guid TracingId { get; }
        Innago.Platform.Messaging.EntityEvents.Verb Verb { get; }
    }
    public interface IEntityWithId<TId>
    {
        TId Id { get; set; }
    }
    public enum Verb
    {
        None = -1,
        Create = 0,
        Update = 1,
        Delete = 2,
        Purge = 3,
    }
}