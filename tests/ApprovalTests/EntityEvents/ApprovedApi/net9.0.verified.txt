[assembly: System.Reflection.AssemblyMetadata("IsTrimmable", "True")]
namespace Innago.Platform.Messaging.EntityEvents
{
    public class EntityEventInfo<T> : Innago.Platform.Messaging.EntityEvents.IEntityEventInfo<T>, System.IEquatable<Innago.Platform.Messaging.EntityEvents.EntityEventInfo<T>>
    {
        public EntityEventInfo(string Id, Innago.Platform.Messaging.EntityEvents.Verb Verb, string? TenantId = null, T? Data = default) { }
        public T Data { get; init; }
        public string EntityName { get; }
        public string Id { get; init; }
        public string Subject { get; }
        public string? TenantId { get; init; }
        public Innago.Platform.Messaging.EntityEvents.Verb Verb { get; init; }
    }
    public static class EntityWithIdExtensions
    {
        public static Innago.Platform.Messaging.EntityEvents.IEntityEventInfo<Innago.Platform.Messaging.EntityEvents.IEntityWithId<TId>> ToCreateEntityEventInfo<TId>(this Innago.Platform.Messaging.EntityEvents.IEntityWithId<TId> entity, string? tenantId = null) { }
        public static Innago.Platform.Messaging.EntityEvents.IEntityEventInfo<Innago.Platform.Messaging.EntityEvents.IEntityWithId<TId>> ToDeleteEntityEventInfo<TId>(this Innago.Platform.Messaging.EntityEvents.IEntityWithId<TId> entity, string? tenantId = null) { }
        public static Innago.Platform.Messaging.EntityEvents.IEntityEventInfo<Innago.Platform.Messaging.EntityEvents.IEntityWithId<TId>> ToEntityEventInfo<TId>(this Innago.Platform.Messaging.EntityEvents.IEntityWithId<TId> entity, Innago.Platform.Messaging.EntityEvents.Verb verb, string? tenantId = null) { }
        public static Innago.Platform.Messaging.EntityEvents.IEntityEventInfo<Innago.Platform.Messaging.EntityEvents.IEntityWithId<TId>> ToPurgeEntityEventInfo<TId>(this Innago.Platform.Messaging.EntityEvents.IEntityWithId<TId> entity, string? tenantId = null) { }
        public static Innago.Platform.Messaging.EntityEvents.IEntityEventInfo<Innago.Platform.Messaging.EntityEvents.IEntityWithId<TId>> ToUpdateEntityEventInfo<TId>(this Innago.Platform.Messaging.EntityEvents.IEntityWithId<TId> entity, string? tenantId = null) { }
    }
}